// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Netways.EntityFramworkCore.DBContext;

namespace Netways.EntityFramworkCore.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Netways.EntityFramworkCore.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries","Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Åland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Albania"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 5,
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Andorra"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Belize"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Benin"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Bonaire"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Bouvet Island"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 32,
                            Name = "British Indian Ocean Territory"
                        },
                        new
                        {
                            Id = 33,
                            Name = "British Virgin Islands"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Brunei"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Bulgaria"
                        });
                });

            modelBuilder.Entity("Netways.EntityFramworkCore.Model.User", b =>
                {
                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("LoginName");

                    b.HasIndex("CountryId");

                    b.ToTable("Users","Netways");

                    b.HasData(
                        new
                        {
                            LoginName = "Netways@Admin",
                            Address = "Lebanon / Beirut",
                            CountryId = 10,
                            DateofBirth = new DateTime(1994, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Netways",
                            IsActive = true,
                            Salary = 1000
                        });
                });

            modelBuilder.Entity("Netways.EntityFramworkCore.Model.User", b =>
                {
                    b.HasOne("Netways.EntityFramworkCore.Model.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
